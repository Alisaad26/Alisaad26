import os
import pandas as pd
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler, MinMaxScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.decomposition import PCA
from sklearn.model_selection import train_test_split


os.environ['KAGGLE_USERNAME'] = 'your_kaggle_username'
os.environ['KAGGLE_KEY'] = 'your_kaggle_key'


!kaggle datasets download -d zynicide/wine-reviews


import zipfile
with zipfile.ZipFile("wine-reviews.zip", 'r') as zip_ref:
    zip_ref.extractall(".")


data = pd.read_csv("winemag-data_first150k.csv")


print(data.head())
X = data.drop(columns=['points'])  
y = data['points']


numeric_features = X.select_dtypes(include=['float64', 'int64']).columns
categorical_features = X.select_dtypes(include=['object']).columns


numeric_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='mean')), 
    ('scaler', StandardScaler())  
])


categorical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='most_frequent')), 
    ('onehot', OneHotEncoder(handle_unknown='ignore'))  
])


preprocessor = ColumnTransformer(
    transformers=[
        ('num', numeric_transformer, numeric_features),
        ('cat', categorical_transformer, categorical_features)
    ])


pca = PCA(n_components=10)  


pipeline = Pipeline(steps=[
    ('preprocessor', preprocessor),
    ('pca', pca)
])


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


X_train_transformed = pipeline.fit_transform(X_train)
X_test_transformed = pipeline.transform(X_test)


print(pd.DataFrame(X_train_transformed).head())
print(pd.DataFrame(X_test_transformed).head())
  
